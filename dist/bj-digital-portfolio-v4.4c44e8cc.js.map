{"mappings":"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","sources":["<anon>","src/js/main.js","src/js/projectCards.js","src/js/data.js","src/js/filter.js","src/js/toggleNav.js"],"sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\nconst $6827df12f68082b2$var$cardsData = [\n    {\n        id: 1,\n        image: (0, {}),\n        title: 'Discover Web Form',\n        techTools: 'HTML, CSS, JavaScript',\n        liveLink: \"https://discover-web-form.netlify.app/\",\n        copy: 'Discover balance transfer form with branded checkbox/radio styling and seamless user experience, featuring custom JavaScript validation.',\n        gitLink: \"https://github.com/BrianJ-27/discover-web-form\",\n        type: 'web'\n    },\n    {\n        id: 2,\n        image: (0, {}),\n        title: 'TVS ADP Reminder',\n        techTools: 'HTML, CSS, litmus',\n        liveLink: \"https://litmus.com/checklist/emails/public/AKfYAuNQTtv9505r\",\n        copy: 'TVS ADP transactional email coded with complex table layouts, live text, and full dark mode compatibility for robust cross-client rendering.',\n        gitLink: \"https://github.com/BrianJ-27/tvs-adp-reminder-campaign/tree/main\",\n        type: 'email'\n    },\n    {\n        id: 3,\n        image: (0, {}),\n        title: 'Macys Quick Reg Form',\n        techTools: 'HTML, CSS, JavaScript',\n        liveLink: \"https://test-quick-reg-form-header-footer.netlify.app/\",\n        copy: \"Macy\\u2019s Quick Reg Form built with complex custom validation, semantic HTML, and accessible markup for efficient, user-friendly registration.\",\n        gitLink: \"#\",\n        type: 'web'\n    },\n    {\n        id: 4,\n        image: (0, {}),\n        title: 'Gerber Promo Email',\n        techTools: 'HTML, CSS, litmus',\n        liveLink: \"https://litmus.com/pub/KhKujKVALMUafHTg\",\n        copy: 'Gerber promotional email built with complex, mobile-responsive tables and live text for optimal rendering, accessibility, and compatibility.',\n        gitLink: \"https://github.com/BrianJ-27/gerber-ln-cp-en-4498\",\n        type: 'email'\n    },\n    {\n        id: 5,\n        image: (0, {}),\n        title: 'Interactive SVG Module',\n        techTools: 'HTML, CSS, JavaScript',\n        liveLink: \"https://dss-svg-framework.netlify.app/\",\n        copy: 'widget with animated SVG regions, dynamic title/body transitions, and custom JS event/keyframe logic for a visually engaging user experience.',\n        gitLink: \"https://github.com/BrianJ-27/dss-svg-framework\",\n        type: 'web'\n    },\n    {\n        id: 6,\n        image: (0, {}),\n        title: 'ATT Movies Newsletter',\n        techTools: 'HTML, CSS, litmus',\n        liveLink: \"https://litmus.com/pub/yay9asaqNhSn4QZ9\",\n        copy: 'Promotional Barbie-themed email with embedded movie trailers, responsive design, and external fallback links for enhanced user engagement.',\n        gitLink: \"https://github.com/BrianJ-27/att-movie-newsletter-barbie\",\n        type: 'email'\n    },\n    {\n        id: 7,\n        image: (0, {}),\n        title: 'Xumo TV Custom Checkbox Form',\n        techTools: 'HTML, CSS, JavaScript',\n        liveLink: \"https://xumo-web-survey-form.netlify.app\",\n        copy: 'Responsive web form with accessible, custom checkboxes featuring animated overlays for enhanced user interaction and category selection.',\n        gitLink: \"https://github.com/BrianJ-27/xumo-web-survey-evergreen/tree/main\",\n        type: 'web'\n    },\n    {\n        id: 8,\n        image: (0, {}),\n        title: 'Gerber Promo Email',\n        techTools: 'HTML, CSS, litmus',\n        liveLink: \"https://litmus.com/pub/KhKujKVALMUafHTg\",\n        copy: 'Gerber email featuring customizable live-text growth chart pillars with VML for Outlook, mobile responsiveness, and cross-browser compatibility.',\n        gitLink: \"https://github.com/BrianJ-27/gerber-growth-chart-campaign\",\n        type: 'email'\n    },\n    {\n        id: 9,\n        image: (0, {}),\n        title: 'Rakuten Kobo Preference Center',\n        techTools: 'HTML, CSS, JavaScript',\n        liveLink: \"https://kob-preference-center-form.netlify.app/\",\n        copy: 'Complex preference center with parent/child checkboxes, animated expand/collapse, semantic tags, and advanced logic for multi-state selection.',\n        gitLink: \"https://github.com/BrianJ-27/kobo-preference-center-v1\",\n        type: 'web'\n    },\n    {\n        id: 10,\n        image: (0, {}),\n        title: 'TVS Newsletter',\n        techTools: 'HTML, CSS, litmus',\n        liveLink: \"https://litmus.com/pub/7BXk0ceOiaY7RMCx\",\n        copy: 'Accessible, dark mode newsletter with engaging live text, responsive tables, and kinetic header navigation that expands/collapses on mobile. ',\n        gitLink: \"https://github.com/BrianJ-27/tvs-newsletter\",\n        type: 'email'\n    },\n    {\n        id: 11,\n        image: (0, {}),\n        title: 'Xfinity Awards Landing Page',\n        techTools: 'HTML, CSS, jQuery',\n        liveLink: \"https://awards-page-xfinity-mobile.netlify.app/\",\n        copy: 'Xfinity Rewards page featuring award highlights, custom jQuery slider, and parallax scroll effect for an engaging, interactive user experience.',\n        gitLink: \"https://github.com/BrianJ-27/Oracle-Awards-page-Xfinity-Mobile\",\n        type: 'web'\n    },\n    {\n        id: 12,\n        image: (0, {}),\n        title: 'Macy\\'s Gift Finder Modules',\n        techTools: 'HTML, CSS, litmus',\n        liveLink: \"https://litmus.com/pub/l1qogre8tLbhGGW2\",\n        copy: 'Created responsive gift finder cards with side-by-side background images and text overlays, dark mode support, and VML for consistent email client rendering.',\n        gitLink: \"https://github.com/BrianJ-27/macys-gift-finder-modules\",\n        type: 'email'\n    }\n];\nvar $6827df12f68082b2$export$2e2bcd8739ae039 = $6827df12f68082b2$var$cardsData;\n\n\n\nfunction $4455a8da0a236c72$var$filterCards(type = 'all') {\n    if (type === 'all') return 0, $6827df12f68082b2$export$2e2bcd8739ae039; // Return all cards if 'all' is selected\n    return (0, $6827df12f68082b2$export$2e2bcd8739ae039).filter((card)=>card.type === type); // Filter by Card type\n}\nvar $4455a8da0a236c72$export$2e2bcd8739ae039 = $4455a8da0a236c72$var$filterCards;\n\n\nconst $6fb2c11f6222ae53$var$projectTitle = document.querySelector('.title__secondary--projects');\nconst $6fb2c11f6222ae53$var$cardContainer = document.querySelector(\".slider__cards\");\n// Set initial heading text dynamically\n$6fb2c11f6222ae53$var$projectTitle.textContent = 'All Projects';\n/**\r\n * Handles clicks on project card CTAs by updating the active button class and\r\n * filtering card displays based on the selected project type.\r\n * @param {Event} e - The event object from the click event.\r\n */ const $6fb2c11f6222ae53$var$projectCardClickHandler = (e)=>{\n    document.querySelectorAll('.cta__project').forEach((button)=>{\n        button.addEventListener('click', (e)=>{\n            const selectedType = e.currentTarget.getAttribute('data-type');\n            // Update active button class\n            document.querySelectorAll('.cta__project').forEach((btn)=>btn.classList.remove('cta__project--active'));\n            e.currentTarget.classList.add('cta__project--active');\n            // Filter and display cards\n            const filteredCards = (0, $4455a8da0a236c72$export$2e2bcd8739ae039)(selectedType);\n            $6fb2c11f6222ae53$var$displayCards(filteredCards);\n            // Update Heading text based on selected type\n            let headingText = \"All Projects\";\n            if (selectedType === 'web') headingText = 'Web Projects';\n            else if (selectedType === 'email') headingText = 'Email Projects';\n            $6fb2c11f6222ae53$var$projectTitle.textContent = headingText;\n        });\n    });\n};\n/**\r\n * Returns a string of HTML for a single project card component.\r\n * @param {{ image: string, title: string, liveLink: string, copy: string, gitLink: string }} cardData\r\n * An object containing the data for the card, with keys image, title, liveLink, copy, and gitLink.\r\n * @returns {string} The HTML for the card component.\r\n */ function $6fb2c11f6222ae53$var$createCard({ image: image, title: title, liveLink: liveLink, techTools: techTools, copy: copy, gitLink: gitLink }) {\n    return `\n   <li class=\"card\">\n        <div class=\"card-content glass3d\">\n            <div class=\"card-image\">\n                <div class=\"card-image-container\">\n                    <img src=\"${image}\" alt=\"Profile Image\">\n                </div>\n                <div class=\"card-glow\"></div>\n            </div>\n            <div class=\"card-info\">\n                <h2 class=\"card-name\">${title}</h2>\n                <p class=\"card-title\">Tools: ${techTools}</p>\n                <p class=\"card-bio\">${copy}</p>\n                <div class=\"card-actions\">\n                  <a href=\"${liveLink}\" class=\"action-button primary\">\n                        <span>Live Link</span>\n\n                    </a>\n                  <a href=\"${gitLink}\" class=\"action-button secondary\">\n                        <span>View Code</span>\n                        <svg class=\"card__icon\" style=\"width: 1.25rem; height: 1.25rem\" viewBox=\"0 0 16 16\" aria-hidden=\"true\">\n              <use xlink:href=\"./assets/images/bj-icon-map.svg#github-white\"></use>\n            </svg>\n                    </a>\n                </div>\n            </div>\n        </div>\n    </li>\n  `;\n}\n/**\r\n * Takes an array of card data and displays it as a list of project cards\r\n * inside the element with class \"slider__cards\".\r\n *\r\n * @param {object[]} filteredCards An array of card data, with each element\r\n *      containing the keys image, title, liveLink, copy, and gitLink.\r\n */ function $6fb2c11f6222ae53$var$displayCards(filteredCards) {\n    let cardsHTML = '';\n    filteredCards.forEach((card)=>{\n        cardsHTML += $6fb2c11f6222ae53$var$createCard(card);\n    });\n    $6fb2c11f6222ae53$var$cardContainer.innerHTML = cardsHTML;\n}\n// Initial display of all cards when the page loads\n$6fb2c11f6222ae53$var$displayCards((0, $6827df12f68082b2$export$2e2bcd8739ae039));\nvar $6fb2c11f6222ae53$export$2e2bcd8739ae039 = $6fb2c11f6222ae53$var$projectCardClickHandler;\n\n\nfunction $e02dfe79ca928b17$var$setupNavToggle() {\n    const menu = document.querySelector(\"header\");\n    const navBar = document.querySelector(\".nav__bar\");\n    /*--Toggle mobile navigation once user clicks on nav menu--*/ menu.addEventListener('click', ()=>{\n        menu.classList.toggle(\"change\");\n        navBar.classList.toggle(\"show__nav\");\n    });\n}\nvar $e02dfe79ca928b17$export$2e2bcd8739ae039 = $e02dfe79ca928b17$var$setupNavToggle;\n\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    //**EVENT LISTENERS **/\n    (0, $6fb2c11f6222ae53$export$2e2bcd8739ae039)();\n    (0, $e02dfe79ca928b17$export$2e2bcd8739ae039)();\n});\n\n\n//# sourceMappingURL=bj-digital-portfolio-v4.4c44e8cc.js.map\n","import projectCardClickHandler from './projectCards.js';\r\nimport setupNavToggle from './toggleNav.js';\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n\r\n//**EVENT LISTENERS **/\r\nprojectCardClickHandler();\r\nsetupNavToggle();\r\n});\r\n","import cardsData from '../../src/js/data.js';\r\nimport filterCards from './filter.js';\r\n\r\nconst projectTitle = document.querySelector('.title__secondary--projects');\r\nconst cardContainer = document.querySelector(\".slider__cards\");\r\n\r\n  // Set initial heading text dynamically\r\n  projectTitle.textContent = 'All Projects';\r\n\r\n/**\r\n * Handles clicks on project card CTAs by updating the active button class and\r\n * filtering card displays based on the selected project type.\r\n * @param {Event} e - The event object from the click event.\r\n */\r\nconst projectCardClickHandler = (e) => {\r\n  document.querySelectorAll('.cta__project').forEach(button => {\r\n    button.addEventListener('click', (e) => {\r\n      const selectedType = e.currentTarget.getAttribute('data-type');\r\n\r\n      // Update active button class\r\n      document.querySelectorAll('.cta__project').forEach(btn => btn.classList.remove('cta__project--active'));\r\n      e.currentTarget.classList.add('cta__project--active');\r\n\r\n      // Filter and display cards\r\n      const filteredCards = filterCards(selectedType);\r\n      displayCards(filteredCards);\r\n\r\n      // Update Heading text based on selected type\r\n      let headingText = \"All Projects\";\r\n      if (selectedType === 'web') {\r\n        headingText = 'Web Projects';\r\n      } else if (selectedType === 'email') {\r\n        headingText = 'Email Projects';\r\n      }\r\n      projectTitle.textContent = headingText;\r\n    });\r\n  });\r\n\r\n}\r\n\r\n/**\r\n * Returns a string of HTML for a single project card component.\r\n * @param {{ image: string, title: string, liveLink: string, copy: string, gitLink: string }} cardData\r\n * An object containing the data for the card, with keys image, title, liveLink, copy, and gitLink.\r\n * @returns {string} The HTML for the card component.\r\n */\r\n\r\nfunction createCard({ image, title, liveLink, techTools, copy, gitLink }) {\r\n  return `\r\n   <li class=\"card\">\r\n        <div class=\"card-content glass3d\">\r\n            <div class=\"card-image\">\r\n                <div class=\"card-image-container\">\r\n                    <img src=\"${image}\" alt=\"Profile Image\">\r\n                </div>\r\n                <div class=\"card-glow\"></div>\r\n            </div>\r\n            <div class=\"card-info\">\r\n                <h2 class=\"card-name\">${title}</h2>\r\n                <p class=\"card-title\">Tools: ${techTools}</p>\r\n                <p class=\"card-bio\">${copy}</p>\r\n                <div class=\"card-actions\">\r\n                  <a href=\"${liveLink}\" class=\"action-button primary\">\r\n                        <span>Live Link</span>\r\n\r\n                    </a>\r\n                  <a href=\"${gitLink}\" class=\"action-button secondary\">\r\n                        <span>View Code</span>\r\n                        <svg class=\"card__icon\" style=\"width: 1.25rem; height: 1.25rem\" viewBox=\"0 0 16 16\" aria-hidden=\"true\">\r\n              <use xlink:href=\"./assets/images/bj-icon-map.svg#github-white\"></use>\r\n            </svg>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </li>\r\n  `;\r\n}\r\n\r\n\r\n/**\r\n * Takes an array of card data and displays it as a list of project cards\r\n * inside the element with class \"slider__cards\".\r\n *\r\n * @param {object[]} filteredCards An array of card data, with each element\r\n *      containing the keys image, title, liveLink, copy, and gitLink.\r\n */\r\nfunction displayCards(filteredCards) {\r\n  let cardsHTML = '';\r\n  filteredCards.forEach((card) => {\r\n    cardsHTML += createCard(card);\r\n  });\r\n  cardContainer.innerHTML = cardsHTML;\r\n}\r\n\r\n\r\n // Initial display of all cards when the page loads\r\n displayCards(cardsData);\r\n\r\nexport default  projectCardClickHandler ;","import discoverPic from '../assets/images/web-discover-project-pic.jpg'\r\nimport tvsAdpPic from '../assets/images/email-tvs-transactional-ODP-Reminder-project-pics.jpg'\r\nimport macysRegPic from '../assets/images/web-macys-quick-reg-form-project-pic.jpg'\r\nimport gerberLn4998Pic from '../assets/images/email-gerber-promo-green-ln-4998-project-pics.jpg'\r\nimport dssFrameworkPic from '../assets/images/web-DSS-framework-project-pic.jpg'\r\nimport attBarbiePic from '../assets/images/email-ATT-Movies-Newsletter-Barbie-project-pics.jpg'\r\nimport xumoSurveyPic from '../assets/images/web-xumoTV-custom-checkbox-form-project-pic.jpg'\r\nimport gerberGrowthPic from '../assets/images/email-gerber-promo-growth-chart-project-pics.jpg'\r\nimport kobPreferencePic from '../assets/images/web-rakuten-kobo-preference-ctr-project-pic.jpg'\r\nimport tvsNewsletterPic from '../assets/images/email-tvs-newsletter-project-pics.jpg'\r\nimport xfinityAwardsPic from '../assets/images/web-awards-xfinity-project-pic.jpg'\r\nimport macysGiftFinderPic from '../assets/images/email-macys-gift-finder-project-pics.jpg'\r\n\r\nconst cardsData = [\r\n  {\r\n    id: 1,\r\n    image: discoverPic,\r\n    title: 'Discover Web Form',\r\n    techTools: 'HTML, CSS, JavaScript',\r\n    liveLink: \"https://discover-web-form.netlify.app/\",\r\n    copy: 'Discover balance transfer form with branded checkbox/radio styling and seamless user experience, featuring custom JavaScript validation.',\r\n    gitLink: \"https://github.com/BrianJ-27/discover-web-form\",\r\n    type: 'web',\r\n  },\r\n  {\r\n    id: 2,\r\n    image: tvsAdpPic,\r\n    title: 'TVS ADP Reminder',\r\n    techTools: 'HTML, CSS, litmus',\r\n    liveLink: \"https://litmus.com/checklist/emails/public/AKfYAuNQTtv9505r\",\r\n    copy: 'TVS ADP transactional email coded with complex table layouts, live text, and full dark mode compatibility for robust cross-client rendering.',\r\n    gitLink: \"https://github.com/BrianJ-27/tvs-adp-reminder-campaign/tree/main\",\r\n    type: 'email',\r\n  },\r\n  {\r\n    id: 3,\r\n    image: macysRegPic,\r\n    title: 'Macys Quick Reg Form',\r\n    techTools: 'HTML, CSS, JavaScript',\r\n    liveLink: \"https://test-quick-reg-form-header-footer.netlify.app/\",\r\n    copy: 'Macy’s Quick Reg Form built with complex custom validation, semantic HTML, and accessible markup for efficient, user-friendly registration.',\r\n    gitLink: \"#\",\r\n    type: 'web',\r\n  },\r\n  {\r\n    id: 4,\r\n    image: gerberLn4998Pic,\r\n    title: 'Gerber Promo Email',\r\n    techTools: 'HTML, CSS, litmus',\r\n    liveLink: \"https://litmus.com/pub/KhKujKVALMUafHTg\",\r\n    copy: 'Gerber promotional email built with complex, mobile-responsive tables and live text for optimal rendering, accessibility, and compatibility.',\r\n    gitLink: \"https://github.com/BrianJ-27/gerber-ln-cp-en-4498\",\r\n    type: 'email',\r\n  },\r\n  {\r\n    id: 5,\r\n    image: dssFrameworkPic,\r\n    title: 'Interactive SVG Module',\r\n    techTools: 'HTML, CSS, JavaScript',\r\n    liveLink: \"https://dss-svg-framework.netlify.app/\",\r\n    copy: 'widget with animated SVG regions, dynamic title/body transitions, and custom JS event/keyframe logic for a visually engaging user experience.',\r\n    gitLink: \"https://github.com/BrianJ-27/dss-svg-framework\",\r\n    type: 'web',\r\n  },\r\n  {\r\n    id: 6,\r\n    image: attBarbiePic,\r\n    title: 'ATT Movies Newsletter',\r\n    techTools: 'HTML, CSS, litmus',\r\n    liveLink: \"https://litmus.com/pub/yay9asaqNhSn4QZ9\",\r\n    copy: 'Promotional Barbie-themed email with embedded movie trailers, responsive design, and external fallback links for enhanced user engagement.',\r\n    gitLink: \"https://github.com/BrianJ-27/att-movie-newsletter-barbie\",\r\n    type: 'email',\r\n  },\r\n  {\r\n    id: 7,\r\n    image: xumoSurveyPic,\r\n    title: 'Xumo TV Custom Checkbox Form',\r\n    techTools: 'HTML, CSS, JavaScript',\r\n    liveLink: \"https://xumo-web-survey-form.netlify.app\",\r\n    copy: 'Responsive web form with accessible, custom checkboxes featuring animated overlays for enhanced user interaction and category selection.',\r\n    gitLink: \"https://github.com/BrianJ-27/xumo-web-survey-evergreen/tree/main\",\r\n    type: 'web',\r\n  },\r\n  {\r\n    id: 8,\r\n    image: gerberGrowthPic,\r\n    title: 'Gerber Promo Email',\r\n    techTools: 'HTML, CSS, litmus',\r\n    liveLink: \"https://litmus.com/pub/KhKujKVALMUafHTg\",\r\n    copy: 'Gerber email featuring customizable live-text growth chart pillars with VML for Outlook, mobile responsiveness, and cross-browser compatibility.',\r\n    gitLink: \"https://github.com/BrianJ-27/gerber-growth-chart-campaign\",\r\n    type: 'email',\r\n  },\r\n  {\r\n    id: 9,\r\n    image: kobPreferencePic,\r\n    title: 'Rakuten Kobo Preference Center',\r\n    techTools: 'HTML, CSS, JavaScript',\r\n    liveLink: \"https://kob-preference-center-form.netlify.app/\",\r\n    copy: 'Complex preference center with parent/child checkboxes, animated expand/collapse, semantic tags, and advanced logic for multi-state selection.',\r\n    gitLink: \"https://github.com/BrianJ-27/kobo-preference-center-v1\",\r\n    type: 'web',\r\n  },\r\n  {\r\n    id: 10,\r\n    image: tvsNewsletterPic,\r\n    title: 'TVS Newsletter',\r\n    techTools: 'HTML, CSS, litmus',\r\n    liveLink: \"https://litmus.com/pub/7BXk0ceOiaY7RMCx\",\r\n    copy: 'Accessible, dark mode newsletter with engaging live text, responsive tables, and kinetic header navigation that expands/collapses on mobile. ',\r\n    gitLink: \"https://github.com/BrianJ-27/tvs-newsletter\",\r\n    type: 'email',\r\n  },\r\n  {\r\n    id: 11,\r\n    image: xfinityAwardsPic,\r\n    title: 'Xfinity Awards Landing Page',\r\n    techTools: 'HTML, CSS, jQuery',\r\n    liveLink: \"https://awards-page-xfinity-mobile.netlify.app/\",\r\n    copy: 'Xfinity Rewards page featuring award highlights, custom jQuery slider, and parallax scroll effect for an engaging, interactive user experience.',\r\n    gitLink: \"https://github.com/BrianJ-27/Oracle-Awards-page-Xfinity-Mobile\",\r\n    type: 'web',\r\n  },\r\n  {\r\n    id: 12,\r\n    image: macysGiftFinderPic,\r\n    title: 'Macy\\'s Gift Finder Modules',\r\n    techTools: 'HTML, CSS, litmus',\r\n    liveLink: \"https://litmus.com/pub/l1qogre8tLbhGGW2\",\r\n    copy: 'Created responsive gift finder cards with side-by-side background images and text overlays, dark mode support, and VML for consistent email client rendering.',\r\n    gitLink: \"https://github.com/BrianJ-27/macys-gift-finder-modules\",\r\n    type: 'email',\r\n  },\r\n];\r\n\r\nexport default cardsData;","import cardsData from '../../src/js/data.js';\r\n\r\nfunction filterCards(type = 'all') {\r\n  if (type === 'all') {\r\n    return cardsData; // Return all cards if 'all' is selected\r\n  } return cardsData.filter(card => card.type === type); // Filter by Card type\r\n}\r\n\r\nexport default filterCards;","function setupNavToggle() {\r\n  const menu = document.querySelector(\"header\");\r\n  const navBar = document.querySelector(\".nav__bar\");\r\n\r\n  /*--Toggle mobile navigation once user clicks on nav menu--*/\r\n  menu.addEventListener('click', () => {\r\n    menu.classList.toggle(\"change\");\r\n    navBar.classList.toggle(\"show__nav\");\r\n  });\r\n}\r\n\r\nexport default setupNavToggle;"],"names":["$6827df12f68082b2$export$2e2bcd8739ae039","id","image","title","techTools","liveLink","copy","gitLink","type","$6fb2c11f6222ae53$var$projectTitle","document","querySelector","$6fb2c11f6222ae53$var$cardContainer","$6fb2c11f6222ae53$var$displayCards","filteredCards","cardsHTML","forEach","card","$6fb2c11f6222ae53$var$createCard","innerHTML","textContent","$e02dfe79ca928b17$export$2e2bcd8739ae039","menu","navBar","addEventListener","classList","toggle","querySelectorAll","button","e","selectedType","currentTarget","getAttribute","btn","remove","add","filter","headingText"],"version":3,"file":"bj-digital-portfolio-v4.4c44e8cc.js.map"}